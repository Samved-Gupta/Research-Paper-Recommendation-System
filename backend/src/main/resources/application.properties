# =================================================
#       MySQL Database Connection Settings
# =================================================
# For local development (not using Docker), uncomment these lines
# spring.datasource.url=jdbc:mysql://localhost:3306/recommender_db
# spring.datasource.username=root
# spring.datasource.password=your_local_mysql_password

# The driver for MySQL.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# =================================================
#       JPA & Hibernate Settings
# =================================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# =================================================
#       OAuth2 Client Configuration
# =================================================
# For local development, you would fill these in. For Docker, they are set by docker-compose.
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.scope=openid,profile,email

spring.security.oauth2.client.registration.github.client-id=
spring.security.oauth2.client.registration.github.client-secret=
spring.security.oauth2.client.registration.github.scope=read:user,user:email

# =================================================
#       Service URLs
# =================================================
# For local development
ml.service.url=http://recommender-ml-service:8000

# =================================================
#       Email Configuration
# =================================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
# For local development, you would fill these in.
# spring.mail.username=
# spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
